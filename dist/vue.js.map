{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/observe/array.js","../src/observe/observe.js","../src/state.js","../src/vdom/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["\r\n\r\nconst attribute =\r\n    /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>']+)))?/\r\n\r\nconst ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*'\r\n\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\n\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\r\n\r\nconst startTagClose = /^\\s*(\\/?)>/\r\n\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\n\r\nexport const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n// 对模板进行编译处理\r\nexport function parseHTML(html) {\r\n\r\n    const ELEMENT_TYPE = 1\r\n    const TEXT_TYPE = 3\r\n    const stack = [] // 用于存放元素\r\n    let currentParent // 指向栈中最后一个\r\n    let root\r\n\r\n    // 最终需要转化成一棵抽象语法树\r\n    function createASTElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n\r\n    // 利用栈来构造一棵树\r\n    function start(tag, attrs) {\r\n        // console.log(tag, attrs, '开始')\r\n        let node = createASTElement(tag, attrs) // 创造一个ast节点\r\n        // console.log(node)\r\n        if (!root) { // 看一下是否是空树\r\n            root = node // 如果为空则当前树是树的根节点\r\n        }\r\n        if (currentParent) {\r\n            node.parent = currentParent\r\n            currentParent.children.push(node)\r\n        }\r\n        stack.push(node)\r\n        currentParent = node // currentParent为栈中最后一个\r\n    }\r\n\r\n    function chars(text) { // 文本直接放到当前指向的节点中\r\n        // console.log(text, '文本')\r\n        text = text.replace(/\\s/g, '')\r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParent\r\n        })\r\n    }\r\n\r\n    function end(tag) {\r\n        // console.log(tag, '结束')\r\n        stack.pop()\r\n        currentParent = stack[stack.length - 1]\r\n    }\r\n\r\n    // 解析一个删除一个\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n\r\n    // 解析开始标签\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen)\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1], // 标签名\r\n                attrs: [] // 标签属性\r\n            }\r\n            advance(start[0].length)\r\n\r\n            // 如果不是开始标签的结束，就一直匹配下去\r\n            let attr, end;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                // console.log(typeof attr[3])\r\n                advance(attr[0].length)\r\n                match.attrs.push({\r\n                    name: attr[1],\r\n                    value: attr[3]\r\n                })\r\n                // console.log(match.attrs[1])\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match\r\n        }\r\n        // 不是开始标签\r\n        return false\r\n    }\r\n\r\n    while (html) {\r\n        // textEnd = 0,开始标签或是结束标签\r\n        // textEnd > 0,文本结束的地方\r\n        let textEnd = html.indexOf('<')\r\n        if (textEnd == 0) {\r\n            const startTagMatch = parseStartTag() // 开始标签的匹配\r\n            // console.log(startTagMatch.attrs)\r\n            if (startTagMatch) { // 解析到开始标签\r\n                // console.log(startTagMatch)\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                // console.log(root)\r\n                continue;\r\n            }\r\n            let endTagMatch = html.match(endTag)\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1])\r\n                // console.log(endTagMatch)\r\n                continue;\r\n            }\r\n        }\r\n        if (textEnd > 0) {\r\n            let text = html.substring(0, textEnd) // 文本内容\r\n            if (text) {\r\n                chars(text)\r\n                advance(text.length)\r\n                // console.log(text)\r\n            }\r\n        }\r\n    }\r\n    // console.log(root)\r\n    return root\r\n}","\r\nimport { parseHTML, defaultTagRE } from \"./parse\"\r\n\r\nfunction genProps(attrs) {\r\n    let str = '' // [{name , value}, {name, value}]\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i]\r\n        if (attr.name === 'style') {\r\n            // color:red;background:red => {color:'red',background:'red'}\r\n            let obj = {}\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, value] = item.split(':')\r\n                obj[key] = value\r\n            })\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nfunction gen(node) {\r\n    if (node.type == 1) {\r\n        return codegen(node)\r\n    } else {\r\n        // 文本\r\n        let text = node.text\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`\r\n        } else {\r\n            // _V(_s(name)+'hello'+_s(name))\r\n            let tokens = []\r\n            let match\r\n            defaultTagRE.lastIndex = 0\r\n            let lastIndex = 0\r\n            while (match = defaultTagRE.exec(text)) {\r\n                let index = match.index\r\n                if (index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index + match[0].length\r\n            }\r\n            if (lastIndex < text.length) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n        }\r\n    }\r\n}\r\n\r\nfunction genChildren(children) {\r\n    return children.map(child => gen(child)).join(',')\r\n}\r\n\r\nfunction codegen(ast) {\r\n    let children = genChildren(ast.children)\r\n    let code = (`_c('${ ast.tag }',${\r\n        ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\r\n        }${\r\n            ast.children.length > 0 ? `,${ children }` : ''\r\n    })`)\r\n    return code\r\n}\r\n\r\n// 对模板进行编译处理\r\nexport function compileToFunction(template) {\r\n    // 1. 将template转换成 ast语法树\r\n    let ast = parseHTML(template)\r\n    // console.log(ast)\r\n\r\n    // 2. 生成render方法（render方法返回的结果就是 虚拟DOM\r\n\r\n    let code = codegen(ast)\r\n    code = `with(this){return ${code}}`\r\n    let render = new Function(code) // 根据代码生成render函数\r\n    return render\r\n\r\n    /*\r\n    render() {\r\n        return _c(\r\n            'div', \r\n            { id: 'app' },\r\n            _c(\r\n                'div', \r\n                { style: { color: 'red'}},\r\n                _v(_s(name) + 'hello'),\r\n                _c(\r\n                    'span',\r\n                    undefined,\r\n                    _v(_s(age))\r\n                )\r\n            )\r\n        )\r\n    }\r\n    */\r\n\r\n} ","\r\nlet oldArrayProto = Array.prototype\r\n\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [\r\n    // 找到所有的变异方法\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice',\r\n]\r\n\r\nmethods.forEach(method => {\r\n    // arr.push(1, 2, 3)\r\n    newArrayProto[method] = function (...args) { // 重写数组方法\r\n        // push()\r\n        const result = oldArrayProto[method].call(this, ...args) // 内部调用原来方法，函数劫持，切片编程\r\n        // 需要对新增的数据进行劫持\r\n        let inserted\r\n        let ob = this.__ob__\r\n\r\n        switch(method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args\r\n                break\r\n            case 'splice':\r\n                inserted = args.slice(2)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n\r\n        if(inserted) {\r\n            ob.observeArray(inserted)\r\n        }\r\n\r\n        return result\r\n    }\r\n})\r\n\r\n","import { newArrayProto } from \"./array\"\r\n\r\nclass Observer {\r\n    constructor(data) {\r\n        // 给数据加了一个标识，如果数据上有__ob__，则说明这个属性被观测了\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false\r\n        })\r\n        // Object.defineProperty只能劫持已经存在的属性\r\n        if(Array.isArray(data)) {\r\n            // 重写数组方法\r\n            data.__proto__ = newArrayProto\r\n            this.observeArray(data)\r\n        } else {\r\n            this.walk(data)\r\n        }\r\n    }\r\n    \r\n    walk(data) { // 循环对象，对属性依次劫持\r\n        // 重新定义属性\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n    }\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value) { // 闭包 属性劫持\r\n    observe(value) // 对所有属性进行劫持\r\n    Object.defineProperty(target, key, {\r\n        get() { // 取值的时候会执行get\r\n            // console.log('用户取值了')\r\n            return value\r\n        },\r\n        set(newValue) { // 修改的时候会执行set\r\n            // console.log('用户设置值了')\r\n            if(newValue === value) return\r\n            observe(newValue)\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    // 劫持对象\r\n    if (typeof data !== 'object' || data == null) {\r\n        return // 只对对象劫持\r\n    }\r\n    if(data.__ob__ instanceof Observer) {\r\n        return data.__ob__\r\n    }\r\n    // console.log(data)\r\n\r\n    /*\r\n        如果一个对象被劫持过，那就不需要再被劫持（要判断一个对象是否被劫持过，\r\n        可以增添一个实例，用实例来判断是否被劫持）\r\n    */\r\n\r\n    return new Observer(data)\r\n}","\r\nimport { observe } from \"./observe/observe\"\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options // 获取所有的选项\r\n    if(opts.data) {\r\n        initData(vm)\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, { // vm.name\r\n        get() {\r\n            return vm[target][key] //vm._data.name\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data // data可能是函数和对象\r\n    data = typeof data === 'function' ? data.call(vm) : data\r\n    // console.log(data)\r\n\r\n    // 对数据进行劫持 vue2 里采用了一个api defineProperty\r\n    vm._data = data\r\n    observe(data)\r\n\r\n    // 将vm._data用vm来代理就可以\r\n    for(let key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n    \r\n}","\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n    if (data == null) {\r\n        data = {}\r\n    }\r\n    let key = data.key\r\n    if (key) {\r\n        delete data.key\r\n    }\r\n    return vnode(vm, tag, key, data, children)\r\n}\r\n\r\nexport function createTextVNode(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text\r\n    }\r\n}\r\n\r\n/*\r\n    1. ast做的是语法层面的转化，描述的是语法本身\r\n    2. 虚拟DOM，描述的是DOM元素，可以增加一些自定义属性\r\n*/\r\n\r\n","\r\nimport { createElementVNode, createTextVNode } from \"./vdom\"\r\n\r\nfunction createElm(vnode) {\r\n    let {tag, data, children, text} = vnode\r\n    if (typeof tag === 'string') {// 标签\r\n        // 将虚拟节点和真实节点对应起来\r\n        vnode.el = document.createElement(tag)\r\n\r\n        // 更新属性\r\n        patchProps(vnode.el, data)\r\n\r\n        children.forEach(child => {\r\n            vnode.el.appendChild(createElm(child))\r\n        })\r\n    } else {\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el\r\n}\r\n\r\nfunction patchProps(el, props) {\r\n    for (let key in props) {\r\n        if (key === 'style') {\r\n            for (let styleName in props.style) {\r\n                el.style[styleName] = props.style[styleName]\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key])\r\n        }\r\n    }\r\n}\r\n\r\nfunction patch(oldVNode, vnode) {\r\n    // 初始渲染流程\r\n    const isRealElement = oldVNode.nodeType\r\n    if (isRealElement) {\r\n        const elm = oldVNode // 获取真实元素\r\n        const parentElm = elm.parentNode // 拿到父元素\r\n        let newElm = createElm(vnode) // 生成新节点\r\n        parentElm.insertBefore(newElm, elm.nextSibling) // 插入新节点\r\n        parentElm.removeChild(elm) // 删除老节点\r\n        return newElm\r\n    } else {\r\n        // diff算法\r\n    }\r\n}\r\n\r\nexport function initLifeCycle(Vue) {\r\n    Vue.prototype._update = function (vnode) { // 将虚拟DOM转化成真实DOM\r\n        const vm = this\r\n        const el = vm.$el\r\n        // patch既有初始化的功能，又有更新的功能\r\n        vm.$el = patch(el, vnode)\r\n    }\r\n\r\n    // _c('div', {}, ...children)\r\n    Vue.prototype._c = function () {\r\n        return createElementVNode(this, ...arguments)\r\n    }\r\n\r\n    // _v(text)\r\n    Vue.prototype._v = function () {\r\n        return createTextVNode(this, ...arguments)\r\n    }\r\n\r\n    Vue.prototype._s = function (value) {\r\n        if (typeof value !== 'object') return value\r\n        return JSON.stringify(value)\r\n    }\r\n\r\n    Vue.prototype._render = function () {\r\n        // 当渲染的时候去实例中取值，就可以将属性和试图绑在一起\r\n        return this.$options.render.call(this)\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n    vm.$el = el\r\n    // 1. 调用render 产生虚拟DOM\r\n    vm._update(vm._render()) // vm.$options.render() 虚拟节点\r\n    // 2. 根据虚拟DOM产生真实DOM\r\n    // 3 插入到el元素中\r\n}","\r\nimport { compileToFunction } from \"./compiler\"\r\nimport { initState } from \"./state\"\r\nimport { mountComponent } from \"./lifecycle\"\r\n\r\nexport function initMixin(Vue) { // 给Vue增加init方法\r\n    Vue.prototype._init = function (options) { // 初始化操作\r\n        const vm = this\r\n        vm.$options = options // 将用户的选项挂载到实例上\r\n\r\n        // 初始化状态\r\n        initState(vm)\r\n\r\n        if (options.el) {\r\n            // 实现数据的挂载\r\n            vm.$mount(options.el)\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this\r\n        el = document.querySelector(el)\r\n        let ops = vm.$options\r\n        if (!ops.render) { // 先进行查找有没有render函数\r\n            let template // 没有render看一下是否写了template，没写template，采用外部的templat\r\n            if (!ops.template && el) { //没有写模板，但是写了el\r\n                template = el.outerHTML\r\n            } else {\r\n                // 写了template，就用写了的template\r\n                if(el) {\r\n                    template = ops.template\r\n                }\r\n            }\r\n            // 需要对模板进行编译\r\n            if(template) {\r\n                const render = compileToFunction(template)\r\n                ops.render = render\r\n            }\r\n        }\r\n        mountComponent(vm, el) // 组件的挂载\r\n        // 最终可以获取render方法\r\n    }\r\n}\r\n","import { initMixin } from \"./init\"\r\nimport { initLifeCycle } from \"./lifecycle\"\r\n\r\n// 将所有的方法都耦合在一起\r\nfunction Vue(options) {  // options用户的选项\r\n    this._init(options)\r\n}\r\n\r\ninitMixin(Vue)\r\ninitLifeCycle(Vue)\r\n\r\nexport default Vue"],"names":["attribute","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","defaultTagRE","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","forEach","item","key","JSON","stringify","slice","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","method","args","result","call","inserted","ob","__ob__","observeArray","Observer","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","observe","target","get","set","newValue","initState","vm","opts","$options","initData","proxy","_data","createElementVNode","vnode","createTextVNode","undefined","createElm","el","document","createElement","patchProps","appendChild","createTextNode","props","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","Vue","_update","$el","_c","arguments","_v","_s","_render","mountComponent","initMixin","_init","options","$mount","querySelector","ops","outerHTML"],"mappings":"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"}