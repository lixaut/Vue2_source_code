{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/gloablAPI.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/observe/watcher.js","../src/state.js","../src/vdom/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["\r\n\r\nexport function mergeOptions(parent, child) {\r\n    const strats = {}\r\n    const LIFECYCLE = [\r\n        'beforeCreate',\r\n        'created'\r\n    ]\r\n    LIFECYCLE.forEach(hook => {\r\n        strats[hook] = function (p, c) {\r\n            if (c) {\r\n                if (p) {\r\n                    return p.concat(c)\r\n                } else {\r\n                    return [c]\r\n                }\r\n            } else {\r\n                return p\r\n            }\r\n        }\r\n    })\r\n    const options = {}\r\n    for (let key in parent) {\r\n        mergeField(key)\r\n    }\r\n    for (let key in child) {\r\n        // console.log(child)\r\n        if (!parent.hasOwnProperty(key)) {\r\n            mergeField(key)\r\n        }\r\n    }\r\n    function mergeField(key) {\r\n        // 策略模式减少if/else\r\n        if (strats[key]) {\r\n            options[key] = strats[key](parent[key], child[key])\r\n        } else {\r\n            options[key] = child[key] || parent[key] // 优先采用儿子\r\n        }\r\n    }\r\n    return options\r\n}","\r\nimport { mergeOptions } from './utils'\r\nexport function initGloablAPI(Vue) {\r\n    // 静态方法\r\n    Vue.options = {}\r\n    Vue.mixin = function (mixin) {\r\n        // 我们期望将用户的选项和全局的options进行合并\r\n        this.options = mergeOptions(this.options, mixin)\r\n        return this\r\n    }\r\n}","\r\n\r\nconst attribute =\r\n    /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>']+)))?/\r\n\r\nconst ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*'\r\n\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\n\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\r\n\r\nconst startTagClose = /^\\s*(\\/?)>/\r\n\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\n\r\nexport const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n// 对模板进行编译处理\r\nexport function parseHTML(html) {\r\n\r\n    const ELEMENT_TYPE = 1\r\n    const TEXT_TYPE = 3\r\n    const stack = [] // 用于存放元素\r\n    let currentParent // 指向栈中最后一个\r\n    let root\r\n\r\n    // 最终需要转化成一棵抽象语法树\r\n    function createASTElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n\r\n    // 利用栈来构造一棵树\r\n    function start(tag, attrs) {\r\n        // console.log(tag, attrs, '开始')\r\n        let node = createASTElement(tag, attrs) // 创造一个ast节点\r\n        // console.log(node)\r\n        if (!root) { // 看一下是否是空树\r\n            root = node // 如果为空则当前树是树的根节点\r\n        }\r\n        if (currentParent) {\r\n            node.parent = currentParent\r\n            currentParent.children.push(node)\r\n        }\r\n        stack.push(node)\r\n        currentParent = node // currentParent为栈中最后一个\r\n    }\r\n\r\n    function chars(text) { // 文本直接放到当前指向的节点中\r\n        // console.log(text, '文本')\r\n        text = text.replace(/\\s/g, '')\r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParent\r\n        })\r\n    }\r\n\r\n    function end(tag) {\r\n        // console.log(tag, '结束')\r\n        stack.pop()\r\n        currentParent = stack[stack.length - 1]\r\n    }\r\n\r\n    // 解析一个删除一个\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n\r\n    // 解析开始标签\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen)\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1], // 标签名\r\n                attrs: [] // 标签属性\r\n            }\r\n            advance(start[0].length)\r\n\r\n            // 如果不是开始标签的结束，就一直匹配下去\r\n            let attr, end;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                // console.log(typeof attr[3])\r\n                advance(attr[0].length)\r\n                match.attrs.push({\r\n                    name: attr[1],\r\n                    value: attr[3]\r\n                })\r\n                // console.log(match.attrs[1])\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match\r\n        }\r\n        // 不是开始标签\r\n        return false\r\n    }\r\n\r\n    while (html) {\r\n        // textEnd = 0,开始标签或是结束标签\r\n        // textEnd > 0,文本结束的地方\r\n        let textEnd = html.indexOf('<')\r\n        if (textEnd == 0) {\r\n            const startTagMatch = parseStartTag() // 开始标签的匹配\r\n            // console.log(startTagMatch.attrs)\r\n            if (startTagMatch) { // 解析到开始标签\r\n                // console.log(startTagMatch)\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                // console.log(root)\r\n                continue;\r\n            }\r\n            let endTagMatch = html.match(endTag)\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1])\r\n                // console.log(endTagMatch)\r\n                continue;\r\n            }\r\n        }\r\n        if (textEnd > 0) {\r\n            let text = html.substring(0, textEnd) // 文本内容\r\n            if (text) {\r\n                chars(text)\r\n                advance(text.length)\r\n                // console.log(text)\r\n            }\r\n        }\r\n    }\r\n    // console.log(root)\r\n    return root\r\n}","\r\nimport { parseHTML, defaultTagRE } from \"./parse\"\r\n\r\nfunction genProps(attrs) {\r\n    let str = '' // [{name , value}, {name, value}]\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i]\r\n        if (attr.name === 'style') {\r\n            // color:red;background:red => {color:'red',background:'red'}\r\n            let obj = {}\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, value] = item.split(':')\r\n                obj[key] = value\r\n            })\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nfunction gen(node) {\r\n    if (node.type == 1) {\r\n        return codegen(node)\r\n    } else {\r\n        // 文本\r\n        let text = node.text\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`\r\n        } else {\r\n            // _V(_s(name)+'hello'+_s(name))\r\n            let tokens = []\r\n            let match\r\n            defaultTagRE.lastIndex = 0\r\n            let lastIndex = 0\r\n            while (match = defaultTagRE.exec(text)) {\r\n                let index = match.index\r\n                if (index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index + match[0].length\r\n            }\r\n            if (lastIndex < text.length) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n        }\r\n    }\r\n}\r\n\r\nfunction genChildren(children) {\r\n    return children.map(child => gen(child)).join(',')\r\n}\r\n\r\nfunction codegen(ast) {\r\n    let children = genChildren(ast.children)\r\n    let code = (`_c('${ ast.tag }',${\r\n        ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\r\n        }${\r\n            ast.children.length > 0 ? `,${ children }` : ''\r\n    })`)\r\n    return code\r\n}\r\n\r\n// 对模板进行编译处理\r\nexport function compileToFunction(template) {\r\n    // 1. 将template转换成 ast语法树\r\n    let ast = parseHTML(template)\r\n    // console.log(ast)\r\n\r\n    // 2. 生成render方法（render方法返回的结果就是 虚拟DOM\r\n\r\n    let code = codegen(ast)\r\n    code = `with(this){return ${code}}`\r\n    let render = new Function(code) // 根据代码生成render函数\r\n    return render\r\n\r\n    /*\r\n    render() {\r\n        return _c(\r\n            'div', \r\n            { id: 'app' },\r\n            _c(\r\n                'div', \r\n                { style: { color: 'red'}},\r\n                _v(_s(name) + 'hello'),\r\n                _c(\r\n                    'span',\r\n                    undefined,\r\n                    _v(_s(age))\r\n                )\r\n            )\r\n        )\r\n    }\r\n    */\r\n\r\n} ","\r\nlet oldArrayProto = Array.prototype\r\n\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [\r\n    // 找到所有的变异方法\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice',\r\n]\r\n\r\nmethods.forEach(method => {\r\n    // arr.push(1, 2, 3)\r\n    newArrayProto[method] = function (...args) { // 重写数组方法\r\n        // push()\r\n        const result = oldArrayProto[method].call(this, ...args) // 内部调用原来方法，函数劫持，切片编程\r\n        // 需要对新增的数据进行劫持\r\n        let inserted\r\n        let ob = this.__ob__\r\n\r\n        switch(method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args\r\n                break\r\n            case 'splice':\r\n                inserted = args.slice(2)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n\r\n        if(inserted) {\r\n            ob.observeArray(inserted)\r\n        }\r\n\r\n        ob.dep.notify()\r\n        return result\r\n    }\r\n})\r\n\r\n","\r\nlet id = 0\r\n\r\nclass Dep {\r\n    constructor() {\r\n        this.id = id++\r\n        this.subs = [] // 存放当前属性的所有watcher\r\n    }\r\n    depend() {\r\n        // this.subs.push(Dep.target) --> 会重复\r\n        Dep.target.addDep(this)\r\n    }\r\n    addSub(watcher) {\r\n        this.subs.push(watcher)\r\n    }\r\n    notify() {\r\n        this.subs.forEach(watcher => {\r\n            watcher.update()\r\n        })\r\n    }\r\n}\r\nDep.target = null\r\n\r\nlet stack = []\r\nexport function pushTarget(watcher) {\r\n    stack.push(watcher)\r\n    Dep.target = watcher\r\n}\r\nexport function popTarget() {\r\n    stack.pop()\r\n    Dep.target = stack[stack.length - 1]\r\n}\r\n\r\nexport default Dep","import { newArrayProto } from \"./array\"\r\nimport Dep from \"./dep\"\r\n\r\nclass Observer {\r\n    constructor(data) {\r\n        // 给每个对象增加收集功能\r\n        this.dep = new Dep()\r\n        // 给数据加了一个标识，如果数据上有__ob__，则说明这个属性被观测了\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false\r\n        })\r\n        // Object.defineProperty只能劫持已经存在的属性\r\n        if(Array.isArray(data)) {\r\n            // 重写数组方法\r\n            data.__proto__ = newArrayProto\r\n            this.observeArray(data)\r\n        } else {\r\n            this.walk(data)\r\n        }\r\n    }\r\n    \r\n    walk(data) { // 循环对象，对属性依次劫持\r\n        // 重新定义属性\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n    }\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\nfunction dependArray(value) {\r\n    for (let i = 0; i < value.length; i++) {\r\n        let current = value[i]\r\n        current.__ob__ && current.__ob__.dep.depend()\r\n        if (Array.isArray(current)) {\r\n            dependArray(current)\r\n        }\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value) { // 闭包 属性劫持\r\n    let childObj = observe(value) // 对所有属性进行劫持 用来收集依赖\r\n    let dep = new Dep() // 对所有对象都进行属性劫持\r\n    Object.defineProperty(target, key, {\r\n        get() { // 取值的时候会执行get\r\n            // console.log('用户取值了')\r\n            if (Dep.target) {\r\n                dep.depend()\r\n                if (childObj) {\r\n                    childObj.dep.depend()\r\n                    if (Array.isArray(value)) {\r\n                        dependArray(value)\r\n                    }\r\n                }\r\n            }\r\n            return value\r\n        },\r\n        set(newValue) { // 修改的时候会执行set\r\n            // console.log('用户设置值了')\r\n            if(newValue === value) return\r\n            observe(newValue)\r\n            value = newValue\r\n            dep.notify() // 通知更新\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    // 劫持对象\r\n    if (typeof data !== 'object' || data == null) {\r\n        return // 只对对象劫持\r\n    }\r\n    if(data.__ob__ instanceof Observer) {\r\n        return data.__ob__\r\n    }\r\n    // console.log(data)\r\n\r\n    /*\r\n        如果一个对象被劫持过，那就不需要再被劫持（要判断一个对象是否被劫持过，\r\n        可以增添一个实例，用实例来判断是否被劫持）\r\n    */\r\n\r\n    return new Observer(data)\r\n}","import Dep, { popTarget, pushTarget } from \"./dep\"\r\n\r\nlet id = 0\r\n\r\nclass Watcher { // 不同的组件有不同的watcher，\r\n    constructor(vm, fn, options) {\r\n        this.id = id++\r\n        this.getter = fn\r\n        this.renderWatcher = options\r\n        this.deps = []\r\n        this.depsId = new Set()\r\n        this.lazy = options.lazy\r\n        this.dirty = this.lazy\r\n        this.vm = vm\r\n        this.lazy ? undefined : this.get()\r\n    }\r\n    evaluate() {\r\n        this.value = this.get()\r\n        this.dirty = false\r\n    }\r\n    get() {\r\n        pushTarget(this)\r\n        let value = this.getter.call(this.vm)\r\n        popTarget()\r\n        return value\r\n    }\r\n    addDep(dep) {\r\n        let id = dep.id\r\n        if (!this.depsId.has(id)) {\r\n            this.deps.push(dep)\r\n            this.depsId.add(id)\r\n            dep.addSub(this) // watcher已经记住了dep，而且去重了，此时让dep也记住watcher\r\n        }\r\n    }\r\n    depend() {\r\n        let i = this.deps.length\r\n        while (i--) {\r\n            this.deps[i].depend()\r\n        }\r\n    }\r\n    update() {\r\n        if (this.lazy) {\r\n            // 如果是计算属性，依赖的值变化了，就标识计算属性是脏值\r\n            this.dirty = true\r\n        } else {\r\n            // this.get() // 更新渲染\r\n            queueWatcher(this)\r\n        }\r\n    }\r\n    run() {\r\n        this.get()\r\n    }\r\n}\r\n\r\nlet queue = []\r\nlet has = {}\r\nlet pending = false // 防抖\r\n\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queue.slice(0)\r\n    queue = []\r\n    has = {}\r\n    pending = false\r\n    flushQueue.forEach(q => q.run())\r\n}\r\n\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id\r\n    if (!has[id]) {\r\n        queue.push(watcher)\r\n        has[id] = true\r\n        // 不管我们的update执行多少次，但最终只执行一轮刷新操作\r\n        if (!pending) {\r\n            nextTick(flushSchedulerQueue)\r\n            pending = true\r\n        }\r\n    }\r\n}\r\n\r\nlet callbacks = []\r\nlet waiting = false\r\n\r\nfunction flushCallbacks() {\r\n    waiting = true\r\n    let cbs = callbacks.slice(0)\r\n    callbacks = []\r\n    cbs.forEach(cb => cb())\r\n\r\n}\r\n\r\nlet timerFunc\r\nif (Promise) {\r\n    timerFunc = () => {\r\n        Promise.resolve().then(flushCallbacks)\r\n    }\r\n} else if (MutationObserver) {\r\n    let observer = new MutationObserver(flushCallbacks) // 传入的回调是异步的\r\n    let textNode = document.createTextNode(1)\r\n    observer.observe(textNode, {\r\n        characterData: true\r\n    })\r\n    timerFunc = () => {\r\n        textNode.textContent = 2\r\n    }\r\n} else if (setImmediate) {\r\n    timerFunc = () => {\r\n        setImmediate(flushCallbacks)\r\n    }\r\n} else {\r\n    timerFunc = () => {\r\n        setTimeout(flushCallbacks)\r\n    }\r\n}\r\n\r\n// nextTick不是创建了一个异步任务，将任务维护到了队列里\r\nexport function nextTick(cb) {\r\n    callbacks.push(cb)\r\n    if (!waiting) {\r\n        timerFunc(flushCallbacks)\r\n        waiting = true\r\n    }\r\n}\r\n\r\n// 需要给每个属性增加一个dep，目的就是收集watcher\r\n\r\nexport default Watcher","\r\nimport { observe } from \"./observe\"\r\nimport Dep from \"./observe/dep\"\r\nimport Watcher from \"./observe/watcher\"\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options // 获取所有的选项\r\n    if(opts.data) {\r\n        initData(vm)\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm)\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, { // vm.name\r\n        get() {\r\n            return vm[target][key] //vm._data.name\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data // data可能是函数和对象\r\n    data = typeof data === 'function' ? data.call(vm) : data\r\n    // console.log(data)\r\n\r\n    // 对数据进行劫持 vue2 里采用了一个api defineProperty\r\n    vm._data = data\r\n    observe(data)\r\n\r\n    // 将vm._data用vm来代理就可以\r\n    for(let key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n    \r\n}\r\n\r\nfunction initComputed(vm) {\r\n    const computed = vm.$options.computed\r\n    const watchers = vm._computedWatchers = {}\r\n    for (let key in computed) {\r\n        let userDef = computed[key]\r\n\r\n        // 需要监控计算属性中get的变化\r\n        let fn = typeof userDef === 'function' ? userDef : userDef.get\r\n        watchers[key] = new Watcher(vm, fn, {lazy: true})\r\n\r\n        defineComputed(vm, key, userDef)\r\n    }\r\n}\r\n\r\nfunction defineComputed(target, key, userDef) {\r\n    const setter = userDef.set || (() => {})\r\n\r\n    // 可以通过实例拿到对应的属性\r\n    Object.defineProperty(target, key, {\r\n        get: createComputedGetter(key),\r\n        set: setter\r\n    })\r\n}\r\n\r\nfunction createComputedGetter(key) {\r\n    // 需要检查是否要执行这个getter\r\n    return function() {\r\n        const watcher = this._computedWatchers[key]\r\n        if (watcher.dirty) {\r\n            // 如果是脏的就去执行 用户传入的函数\r\n            watcher.evaluate()\r\n        }\r\n        if (Dep.target) {\r\n            // 计算属性出栈后，还有渲染watcher\r\n            watcher.depend()\r\n        }\r\n        return watcher.value\r\n    }\r\n}","\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n    if (data == null) {\r\n        data = {}\r\n    }\r\n    let key = data.key\r\n    if (key) {\r\n        delete data.key\r\n    }\r\n    return vnode(vm, tag, key, data, children)\r\n}\r\n\r\nexport function createTextVNode(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text\r\n    }\r\n}\r\n\r\n/*\r\n    1. ast做的是语法层面的转化，描述的是语法本身\r\n    2. 虚拟DOM，描述的是DOM元素，可以增加一些自定义属性\r\n*/\r\n\r\n","\r\nimport Watcher from \"./observe/watcher\"\r\nimport { createElementVNode, createTextVNode } from \"./vdom\"\r\n\r\nfunction createElm(vnode) {\r\n    let {tag, data, children, text} = vnode\r\n    if (typeof tag === 'string') {// 标签\r\n        // 将虚拟节点和真实节点对应起来\r\n        vnode.el = document.createElement(tag)\r\n\r\n        // 更新属性\r\n        patchProps(vnode.el, data)\r\n\r\n        children.forEach(child => {\r\n            vnode.el.appendChild(createElm(child))\r\n        })\r\n    } else {\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el\r\n}\r\n\r\nfunction patchProps(el, props) {\r\n    for (let key in props) {\r\n        if (key === 'style') {\r\n            for (let styleName in props.style) {\r\n                el.style[styleName] = props.style[styleName]\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key])\r\n        }\r\n    }\r\n}\r\n\r\nfunction patch(oldVNode, vnode) {\r\n    // 初始渲染流程\r\n    const isRealElement = oldVNode.nodeType\r\n    if (isRealElement) {\r\n        const elm = oldVNode // 获取真实元素\r\n        const parentElm = elm.parentNode // 拿到父元素\r\n        let newElm = createElm(vnode) // 生成新节点\r\n        parentElm.insertBefore(newElm, elm.nextSibling) // 插入新节点\r\n        parentElm.removeChild(elm) // 删除老节点\r\n        return newElm\r\n    } else {\r\n        // diff算法\r\n    }\r\n}\r\n\r\nexport function initLifeCycle(Vue) {\r\n    Vue.prototype._update = function (vnode) { // 将虚拟DOM转化成真实DOM\r\n        const vm = this\r\n        const el = vm.$el\r\n        // patch既有初始化的功能，又有更新的功能\r\n        vm.$el = patch(el, vnode)\r\n    }\r\n\r\n    // _c('div', {}, ...children)\r\n    Vue.prototype._c = function () {\r\n        return createElementVNode(this, ...arguments)\r\n    }\r\n\r\n    // _v(text)\r\n    Vue.prototype._v = function () {\r\n        return createTextVNode(this, ...arguments)\r\n    }\r\n\r\n    Vue.prototype._s = function (value) {\r\n        if (typeof value !== 'object') return value\r\n        return JSON.stringify(value)\r\n    }\r\n\r\n    Vue.prototype._render = function () {\r\n        // 当渲染的时候去实例中取值，就可以将属性和试图绑在一起\r\n        return this.$options.render.call(this)\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n    vm.$el = el\r\n    // 1. 调用render 产生虚拟DOM\r\n    const updateComponent = () => {\r\n        vm._update(vm._render())\r\n    }\r\n    new Watcher(vm, updateComponent, true) // vm.$options.render() 虚拟节点\r\n    // 2. 根据虚拟DOM产生真实DOM\r\n    // 3 插入到el元素中\r\n}\r\n\r\nexport function callHook(vm, hook) { // 调用钩子函数\r\n    const handlers = vm.$options[hook]\r\n    if (handlers) {\r\n        handlers.forEach(handlers => handlers.call(vm))\r\n    }\r\n}","\r\nimport { compileToFunction } from \"./compiler\"\r\nimport { initState } from \"./state\"\r\nimport { callHook, mountComponent } from \"./lifecycle\"\r\nimport { mergeOptions } from \"./utils\"\r\n\r\nexport function initMixin(Vue) { // 给Vue增加init方法\r\n    Vue.prototype._init = function (options) { // 初始化操作\r\n        const vm = this\r\n        vm.$options = mergeOptions(this.constructor.options, options) // 将用户的选项挂载到实例上\r\n\r\n        callHook(vm, 'beforeCreate')\r\n        // 初始化状态,初始化计算属性\r\n        initState(vm)\r\n\r\n        callHook(vm, 'created')\r\n\r\n        if (options.el) {\r\n            // 实现数据的挂载\r\n            vm.$mount(options.el)\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this\r\n        el = document.querySelector(el)\r\n        let ops = vm.$options\r\n        if (!ops.render) { // 先进行查找有没有render函数\r\n            let template // 没有render看一下是否写了template，没写template，采用外部的templat\r\n            if (!ops.template && el) { //没有写模板，但是写了el\r\n                template = el.outerHTML\r\n            } else {\r\n                // 写了template，就用写了的template\r\n                if(el) {\r\n                    template = ops.template\r\n                }\r\n            }\r\n            // 需要对模板进行编译\r\n            if(template) {\r\n                const render = compileToFunction(template)\r\n                ops.render = render\r\n            }\r\n        }\r\n        mountComponent(vm, el) // 组件的挂载\r\n        // 最终可以获取render方法\r\n    }\r\n}\r\n","\r\nimport { initGloablAPI } from \"./gloablAPI\"\r\nimport { initMixin } from \"./init\"\r\nimport { initLifeCycle } from \"./lifecycle\"\r\nimport { nextTick } from \"./observe/watcher\"\r\n\r\n// 将所有的方法都耦合在一起\r\nfunction Vue(options) {  // options用户的选项\r\n    this._init(options)\r\n}\r\n\r\nVue.prototype.$nextTick = nextTick\r\n\r\ninitMixin(Vue)\r\n\r\ninitLifeCycle(Vue)\r\n\r\ninitGloablAPI(Vue)\r\n\r\nexport default Vue"],"names":["mergeOptions","parent","child","strats","LIFECYCLE","forEach","hook","p","c","concat","options","key","mergeField","hasOwnProperty","initGloablAPI","Vue","mixin","attribute","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","defaultTagRE","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","item","JSON","stringify","slice","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","ast","code","compileToFunction","template","render","Function","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","method","args","result","call","inserted","ob","__ob__","observeArray","dep","notify","id","Dep","subs","target","addDep","watcher","update","pushTarget","popTarget","Observer","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","observe","dependArray","current","depend","childObj","get","set","newValue","Watcher","vm","fn","getter","renderWatcher","deps","depsId","Set","lazy","dirty","undefined","has","add","addSub","queueWatcher","queue","pending","flushSchedulerQueue","flushQueue","q","run","nextTick","callbacks","waiting","flushCallbacks","cbs","cb","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","initState","opts","$options","initData","computed","initComputed","proxy","_data","watchers","_computedWatchers","userDef","defineComputed","setter","createComputedGetter","evaluate","createElementVNode","vnode","createTextVNode","createElm","el","createElement","patchProps","appendChild","props","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","_update","$el","_c","arguments","_v","_s","_render","mountComponent","updateComponent","callHook","handlers","initMixin","_init","constructor","$mount","querySelector","ops","outerHTML","$nextTick"],"mappings":"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"}