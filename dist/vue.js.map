{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/utils.js","../src/gloablAPI.js","../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/observe/watcher.js","../src/state.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["\n\nconst attribute =\n    /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>']+)))?/\n\nconst ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*'\n\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\n\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\n\nconst startTagClose = /^\\s*(\\/?)>/\n\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\n\nexport const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\n// 对模板进行编译处理\nexport function parseHTML(html) {\n\n    const ELEMENT_TYPE = 1\n    const TEXT_TYPE = 3\n    const stack = [] // 用于存放元素\n    let currentParent // 指向栈中最后一个\n    let root\n\n    // 最终需要转化成一棵抽象语法树\n    function createASTElement(tag, attrs) {\n        return {\n            tag,\n            type: ELEMENT_TYPE,\n            children: [],\n            attrs,\n            parent: null\n        }\n    }\n\n    // 利用栈来构造一棵树\n    function start(tag, attrs) {\n        // console.log(tag, attrs, '开始')\n        let node = createASTElement(tag, attrs) // 创造一个ast节点\n        // console.log(node)\n        if (!root) { // 看一下是否是空树\n            root = node // 如果为空则当前树是树的根节点\n        }\n        if (currentParent) {\n            node.parent = currentParent\n            currentParent.children.push(node)\n        }\n        stack.push(node)\n        currentParent = node // currentParent为栈中最后一个\n    }\n\n    function chars(text) { // 文本直接放到当前指向的节点中\n        // console.log(text, '文本')\n        text = text.replace(/\\s/g, '')\n        text && currentParent.children.push({\n            type: TEXT_TYPE,\n            text,\n            parent: currentParent\n        })\n    }\n\n    function end(tag) {\n        // console.log(tag, '结束')\n        stack.pop()\n        currentParent = stack[stack.length - 1]\n    }\n\n    // 解析一个删除一个\n    function advance(n) {\n        html = html.substring(n)\n    }\n\n    // 解析开始标签\n    function parseStartTag() {\n        const start = html.match(startTagOpen)\n        if (start) {\n            const match = {\n                tagName: start[1], // 标签名\n                attrs: [] // 标签属性\n            }\n            advance(start[0].length)\n\n            // 如果不是开始标签的结束，就一直匹配下去\n            let attr, end;\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                // console.log(typeof attr[3])\n                advance(attr[0].length)\n                match.attrs.push({\n                    name: attr[1],\n                    value: attr[3]\n                })\n                // console.log(match.attrs[1])\n            }\n            if (end) {\n                advance(end[0].length)\n            }\n            return match\n        }\n        // 不是开始标签\n        return false\n    }\n\n    while (html) {\n        // textEnd = 0,开始标签或是结束标签\n        // textEnd > 0,文本结束的地方\n        let textEnd = html.indexOf('<')\n        if (textEnd == 0) {\n            const startTagMatch = parseStartTag() // 开始标签的匹配\n            // console.log(startTagMatch.attrs)\n            if (startTagMatch) { // 解析到开始标签\n                // console.log(startTagMatch)\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                // console.log(root)\n                continue;\n            }\n            let endTagMatch = html.match(endTag)\n            if (endTagMatch) {\n                advance(endTagMatch[0].length);\n                end(endTagMatch[1])\n                // console.log(endTagMatch)\n                continue;\n            }\n        }\n        if (textEnd > 0) {\n            let text = html.substring(0, textEnd) // 文本内容\n            if (text) {\n                chars(text)\n                advance(text.length)\n                // console.log(text)\n            }\n        }\n    }\n    // console.log(root)\n    return root\n}","\nimport { parseHTML, defaultTagRE } from \"./parse\"\n\nfunction genProps(attrs) {\n    let str = '' // [{name , value}, {name, value}]\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i]\n        if (attr.name === 'style') {\n            // color:red;background:red => {color:'red',background:'red'}\n            let obj = {}\n            attr.value.split(';').forEach(item => {\n                let [key, value] = item.split(':')\n                obj[key] = value\n            })\n            attr.value = obj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0, -1)}}`\n}\n\nfunction gen(node) {\n    if (node.type == 1) {\n        return codegen(node)\n    } else {\n        // 文本\n        let text = node.text\n        if (!defaultTagRE.test(text)) {\n            return `_v(${JSON.stringify(text)})`\n        } else {\n            // _V(_s(name)+'hello'+_s(name))\n            let tokens = []\n            let match\n            defaultTagRE.lastIndex = 0\n            let lastIndex = 0\n            while (match = defaultTagRE.exec(text)) {\n                let index = match.index\n                if (index > lastIndex) {\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n                }\n                tokens.push(`_s(${match[1].trim()})`)\n                lastIndex = index + match[0].length\n            }\n            if (lastIndex < text.length) {\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\n            }\n            return `_v(${tokens.join('+')})`\n        }\n    }\n}\n\nfunction genChildren(children) {\n    return children.map(child => gen(child)).join(',')\n}\n\nfunction codegen(ast) {\n    let children = genChildren(ast.children)\n    let code = (`_c('${ ast.tag }',${\n        ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\n        }${\n            ast.children.length > 0 ? `,${ children }` : ''\n    })`)\n    return code\n}\n\n// 对模板进行编译处理\nexport function compileToFunction(template) {\n    // 1. 将template转换成 ast语法树\n    let ast = parseHTML(template)\n    // console.log(ast)\n\n    // 2. 生成render方法（render方法返回的结果就是 虚拟DOM\n\n    let code = codegen(ast)\n    code = `with(this){return ${code}}`\n    let render = new Function(code) // 根据代码生成render函数\n    return render\n\n    /*\n    render() {\n        return _c(\n            'div', \n            { id: 'app' },\n            _c(\n                'div', \n                { style: { color: 'red'}},\n                _v(_s(name) + 'hello'),\n                _c(\n                    'span',\n                    undefined,\n                    _v(_s(age))\n                )\n            )\n        )\n    }\n    */\n\n} ","\n\nexport function mergeOptions(parent, child) {\n    const strats = {}\n    const LIFECYCLE = [\n        'beforeCreate',\n        'created'\n    ]\n    LIFECYCLE.forEach(hook => {\n        strats[hook] = function (p, c) {\n            if (c) {\n                if (p) {\n                    return p.concat(c)\n                } else {\n                    return [c]\n                }\n            } else {\n                return p\n            }\n        }\n    })\n    const options = {}\n    for (let key in parent) {\n        mergeField(key)\n    }\n    for (let key in child) {\n        // console.log(child)\n        if (!parent.hasOwnProperty(key)) {\n            mergeField(key)\n        }\n    }\n    function mergeField(key) {\n        // 策略模式减少if/else\n        if (strats[key]) {\n            options[key] = strats[key](parent[key], child[key])\n        } else {\n            options[key] = child[key] || parent[key] // 优先采用儿子\n        }\n    }\n    return options\n}","\nimport { mergeOptions } from './utils'\nexport function initGloablAPI(Vue) {\n    // 静态方法\n    Vue.options = {}\n    Vue.mixin = function (mixin) {\n        // 我们期望将用户的选项和全局的options进行合并\n        this.options = mergeOptions(this.options, mixin)\n        return this\n    }\n}","\nlet oldArrayProto = Array.prototype\n\nexport let newArrayProto = Object.create(oldArrayProto)\n\nlet methods = [\n    // 找到所有的变异方法\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'reverse',\n    'sort',\n    'splice',\n]\n\nmethods.forEach(method => {\n    // arr.push(1, 2, 3)\n    newArrayProto[method] = function (...args) { // 重写数组方法\n        // push()\n        const result = oldArrayProto[method].call(this, ...args) // 内部调用原来方法，函数劫持，切片编程\n        // 需要对新增的数据进行劫持\n        let inserted\n        let ob = this.__ob__\n\n        switch(method) {\n            case 'push':\n            case 'unshift':\n                inserted = args\n                break\n            case 'splice':\n                inserted = args.slice(2)\n                break\n            default:\n                break\n        }\n\n        if(inserted) {\n            ob.observeArray(inserted)\n        }\n\n        ob.dep.notify()\n        return result\n    }\n})\n\n","\nlet id = 0\n\nclass Dep {\n    constructor() {\n        this.id = id++\n        this.subs = [] // 存放当前属性的所有watcher\n    }\n    depend() {\n        // this.subs.push(Dep.target) --> 会重复\n        Dep.target.addDep(this)\n    }\n    addSub(watcher) {\n        this.subs.push(watcher)\n    }\n    notify() {\n        this.subs.forEach(watcher => {\n            watcher.update()\n        })\n    }\n}\nDep.target = null\n\nlet stack = []\nexport function pushTarget(watcher) {\n    stack.push(watcher)\n    Dep.target = watcher\n}\nexport function popTarget() {\n    stack.pop()\n    Dep.target = stack[stack.length - 1]\n}\n\nexport default Dep","import { newArrayProto } from \"./array\"\nimport Dep from \"./dep\"\n\nclass Observer {\n    constructor(data) {\n        // 给每个对象增加收集功能\n        this.dep = new Dep()\n        // 给数据加了一个标识，如果数据上有__ob__，则说明这个属性被观测了\n        Object.defineProperty(data, '__ob__', {\n            value: this,\n            enumerable: false\n        })\n        // Object.defineProperty只能劫持已经存在的属性\n        if(Array.isArray(data)) {\n            // 重写数组方法\n            data.__proto__ = newArrayProto\n            this.observeArray(data)\n        } else {\n            this.walk(data)\n        }\n    }\n    \n    walk(data) { // 循环对象，对属性依次劫持\n        // 重新定义属性\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\n    }\n    observeArray(data) {\n        data.forEach(item => observe(item))\n    }\n}\n\nfunction dependArray(value) {\n    for (let i = 0; i < value.length; i++) {\n        let current = value[i]\n        current.__ob__ && current.__ob__.dep.depend()\n        if (Array.isArray(current)) {\n            dependArray(current)\n        }\n    }\n}\n\nexport function defineReactive(target, key, value) { // 闭包 属性劫持\n    let childObj = observe(value) // 对所有属性进行劫持 用来收集依赖\n    let dep = new Dep() // 对所有对象都进行属性劫持\n    Object.defineProperty(target, key, {\n        get() { // 取值的时候会执行get\n            // console.log('用户取值了')\n            if (Dep.target) {\n                dep.depend()\n                if (childObj) {\n                    childObj.dep.depend()\n                    if (Array.isArray(value)) {\n                        dependArray(value)\n                    }\n                }\n            }\n            return value\n        },\n        set(newValue) { // 修改的时候会执行set\n            // console.log('用户设置值了')\n            if(newValue === value) return\n            observe(newValue)\n            value = newValue\n            dep.notify() // 通知更新\n        }\n    })\n}\n\nexport function observe(data) {\n    // 劫持对象\n    if (typeof data !== 'object' || data == null) {\n        return // 只对对象劫持\n    }\n    if(data.__ob__ instanceof Observer) {\n        return data.__ob__\n    }\n    // console.log(data)\n\n    /*\n        如果一个对象被劫持过，那就不需要再被劫持（要判断一个对象是否被劫持过，\n        可以增添一个实例，用实例来判断是否被劫持）\n    */\n\n    return new Observer(data)\n}","import Dep, { popTarget, pushTarget } from \"./dep\"\n\nlet id = 0\n\nclass Watcher { // 不同的组件有不同的watcher，\n    constructor(vm, exprOrFn, options, cb) {\n        this.id = id++\n\n        if (typeof exprOrFn === 'string') {\n            this.getter = function() {\n                return vm[exprOrFn]\n            }\n        } else {\n            this.getter = exprOrFn\n        }\n\n        this.renderWatcher = options\n        this.deps = []\n        this.depsId = new Set()\n        this.lazy = options.lazy\n        this.cb = cb\n        this.dirty = this.lazy\n        this.vm = vm\n        this.user = options.user\n        this.value = this.lazy ? undefined : this.get()\n    }\n    evaluate() {\n        this.value = this.get()\n        this.dirty = false\n    }\n    get() {\n        pushTarget(this)\n        let value = this.getter.call(this.vm)\n        popTarget()\n        return value\n    }\n    addDep(dep) {\n        let id = dep.id\n        if (!this.depsId.has(id)) {\n            this.deps.push(dep)\n            this.depsId.add(id)\n            dep.addSub(this) // watcher已经记住了dep，而且去重了，此时让dep也记住watcher\n        }\n    }\n    depend() {\n        let i = this.deps.length\n        while (i--) {\n            this.deps[i].depend()\n        }\n    }\n    update() {\n        if (this.lazy) {\n            // 如果是计算属性，依赖的值变化了，就标识计算属性是脏值\n            this.dirty = true\n        } else {\n            // this.get() // 更新渲染\n            queueWatcher(this)\n        }\n    }\n    run() {\n        let oldValue = this.value\n        let newValue = this.get()\n        if (this.user) {\n            this.cb.call(this.vm, newValue, oldValue)\n        }\n    }\n}\n\nlet queue = []\nlet has = {}\nlet pending = false // 防抖\n\nfunction flushSchedulerQueue() {\n    let flushQueue = queue.slice(0)\n    queue = []\n    has = {}\n    pending = false\n    flushQueue.forEach(q => q.run())\n}\n\nfunction queueWatcher(watcher) {\n    const id = watcher.id\n    if (!has[id]) {\n        queue.push(watcher)\n        has[id] = true\n        // 不管我们的update执行多少次，但最终只执行一轮刷新操作\n        if (!pending) {\n            nextTick(flushSchedulerQueue)\n            pending = true\n        }\n    }\n}\n\nlet callbacks = []\nlet waiting = false\n\nfunction flushCallbacks() {\n    waiting = true\n    let cbs = callbacks.slice(0)\n    callbacks = []\n    cbs.forEach(cb => cb())\n\n}\n\nlet timerFunc\nif (Promise) {\n    timerFunc = () => {\n        Promise.resolve().then(flushCallbacks)\n    }\n} else if (MutationObserver) {\n    let observer = new MutationObserver(flushCallbacks) // 传入的回调是异步的\n    let textNode = document.createTextNode(1)\n    observer.observe(textNode, {\n        characterData: true\n    })\n    timerFunc = () => {\n        textNode.textContent = 2\n    }\n} else if (setImmediate) {\n    timerFunc = () => {\n        setImmediate(flushCallbacks)\n    }\n} else {\n    timerFunc = () => {\n        setTimeout(flushCallbacks)\n    }\n}\n\n// nextTick不是创建了一个异步任务，将任务维护到了队列里\nexport function nextTick(cb) {\n    callbacks.push(cb)\n    if (!waiting) {\n        timerFunc(flushCallbacks)\n        waiting = true\n    }\n}\n\n// 需要给每个属性增加一个dep，目的就是收集watcher\n\nexport default Watcher","\nimport { observe } from \"./observe\"\nimport Dep from \"./observe/dep\"\nimport Watcher, { nextTick } from \"./observe/watcher\"\n\nexport function initState(vm) {\n    const opts = vm.$options // 获取所有的选项\n    if (opts.data) {\n        initData(vm)\n    }\n    if (opts.computed) {\n        initComputed(vm)\n    }\n    if (opts.watch) {\n        initWatch(vm)\n    }\n}\n\nfunction proxy(vm, target, key) {\n    Object.defineProperty(vm, key, { // vm.name\n        get() {\n            return vm[target][key] //vm._data.name\n        },\n        set(newValue) {\n            vm[target][key] = newValue\n        }\n    })\n}\n\nfunction initData(vm) {\n    let data = vm.$options.data // data可能是函数和对象\n    data = typeof data === 'function' ? data.call(vm) : data\n    // console.log(data)\n\n    // 对数据进行劫持 vue2 里采用了一个api defineProperty\n    vm._data = data\n    observe(data)\n\n    // 将vm._data用vm来代理就可以\n    for (let key in data) {\n        proxy(vm, '_data', key)\n    }\n\n}\n\nfunction initComputed(vm) {\n    const computed = vm.$options.computed\n    const watchers = vm._computedWatchers = {}\n    for (let key in computed) {\n        let userDef = computed[key]\n\n        // 需要监控计算属性中get的变化\n        let fn = typeof userDef === 'function' ? userDef : userDef.get\n        watchers[key] = new Watcher(vm, fn, { lazy: true })\n\n        defineComputed(vm, key, userDef)\n    }\n}\n\nfunction initWatch(vm) {\n    let watch = vm.$options.watch\n    for (let key in watch) {\n        const handler = watch[key]\n        if (Array.isArray(handler)) {\n            for (let i = 0; i < handler.length; i++) {\n                createWatcher(vm, key, handler[i])\n            }\n        } else {\n            createWatcher(vm, key, handler)\n        }\n    }\n}\n\nfunction createWatcher(vm, key, handler) {\n    // 字符串 函数\n    if (typeof handler === 'string') {\n        handler = vm[handler]\n    }\n    return vm.$watch(key, handler)\n}\n\nfunction defineComputed(target, key, userDef) {\n    const setter = userDef.set || (() => { })\n\n    // 可以通过实例拿到对应的属性\n    Object.defineProperty(target, key, {\n        get: createComputedGetter(key),\n        set: setter\n    })\n}\n\nfunction createComputedGetter(key) {\n    // 需要检查是否要执行这个getter\n    return function () {\n        const watcher = this._computedWatchers[key]\n        if (watcher.dirty) {\n            // 如果是脏的就去执行 用户传入的函数\n            watcher.evaluate()\n        }\n        if (Dep.target) {\n            // 计算属性出栈后，还有渲染watcher\n            watcher.depend()\n        }\n        return watcher.value\n    }\n}\n\nexport function initStateMixin(Vue) {\n    Vue.prototype.$nextTick = nextTick\n\n    Vue.prototype.$watch = function(exprOrFn, cb, options = {}) {\n        // name\n        // () => vm.name\n    \n        // name值变化，直接执行cb\n        new Watcher(this, exprOrFn, {user: true}, cb)\n    }\n}","\n\nexport function createElementVNode(vm, tag, data, ...children) {\n    if (data == null) {\n        data = {}\n    }\n    let key = data.key\n    if (key) {\n        delete data.key\n    }\n    return vnode(vm, tag, key, data, children)\n}\n\nexport function createTextVNode(vm, text) {\n    return vnode(vm, undefined, undefined, undefined, undefined, text)\n}\n\nfunction vnode(vm, tag, key, data, children, text) {\n    return {\n        vm,\n        tag,\n        key,\n        data,\n        children,\n        text\n    }\n}\n\nexport function isSameVnode(vnode1, vnode2) {\n    return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key\n}\n\n/*\n    1. ast做的是语法层面的转化，描述的是语法本身\n    2. 虚拟DOM，描述的是DOM元素，可以增加一些自定义属性\n*/\n\n","import { isSameVnode } from \".\"\n\n\nexport function createElm(vnode) {\n    let {tag, data, children, text} = vnode\n    if (typeof tag === 'string') {// 标签\n        // 将虚拟节点和真实节点对应起来\n        vnode.el = document.createElement(tag)\n\n        // 更新属性\n        patchProps(vnode.el, data)\n\n        children.forEach(child => {\n            vnode.el.appendChild(createElm(child))\n        })\n    } else {\n        vnode.el = document.createTextNode(text)\n    }\n    return vnode.el\n}\n\nexport function patchProps(el, props) {\n    for (let key in props) {\n        if (key === 'style') {\n            for (let styleName in props.style) {\n                el.style[styleName] = props.style[styleName]\n            }\n        } else {\n            el.setAttribute(key, props[key])\n        }\n    }\n}\n\nexport function patch(oldVNode, vnode) {\n    // 初始渲染流程\n    const isRealElement = oldVNode.nodeType\n    if (isRealElement) {\n        const elm = oldVNode // 获取真实元素\n        const parentElm = elm.parentNode // 拿到父元素\n        let newElm = createElm(vnode) // 生成新节点\n        parentElm.insertBefore(newElm, elm.nextSibling) // 插入新节点\n        parentElm.removeChild(elm) // 删除老节点\n        return newElm\n    } else {\n        // diff算法\n        if (!isSameVnode(oldVNode, vnode)) {\n            // 用老节点的父亲替换\n            let el = createElm(vnode)\n            oldVNode.el.parentNode.replaceChild(el, oldVNode.el)\n            return el\n        }\n\n        vnode.el = oldVNode.el // 复用老节点的元素\n        // 文本的情况\n        if (!oldVNode.tag) {\n            if (oldVNode.text !== vnode.text) {\n                oldVNode.el.textContent = vnode.text // 用新的覆盖老的\n\n            }\n        }\n        // 是标签 我们需要比对标签的属性\n        console.log(oldVNode, vnode)\n    }\n}","\nimport Watcher from \"./observe/watcher\"\nimport { createElementVNode, createTextVNode } from \"./vdom\"\nimport { patch } from './vdom/patch'\n\nexport function initLifeCycle(Vue) {\n    Vue.prototype._update = function (vnode) { // 将虚拟DOM转化成真实DOM\n        const vm = this\n        const el = vm.$el\n        // patch既有初始化的功能，又有更新的功能\n        vm.$el = patch(el, vnode)\n    }\n\n    // _c('div', {}, ...children)\n    Vue.prototype._c = function () {\n        return createElementVNode(this, ...arguments)\n    }\n\n    // _v(text)\n    Vue.prototype._v = function () {\n        return createTextVNode(this, ...arguments)\n    }\n\n    Vue.prototype._s = function (value) {\n        if (typeof value !== 'object') return value\n        return JSON.stringify(value)\n    }\n\n    Vue.prototype._render = function () {\n        // 当渲染的时候去实例中取值，就可以将属性和试图绑在一起\n        return this.$options.render.call(this)\n    }\n}\n\nexport function mountComponent(vm, el) {\n    vm.$el = el\n    // 1. 调用render 产生虚拟DOM\n    const updateComponent = () => {\n        vm._update(vm._render())\n    }\n    new Watcher(vm, updateComponent, true) // vm.$options.render() 虚拟节点\n    // 2. 根据虚拟DOM产生真实DOM\n    // 3 插入到el元素中\n}\n\nexport function callHook(vm, hook) { // 调用钩子函数\n    const handlers = vm.$options[hook]\n    if (handlers) {\n        handlers.forEach(handlers => handlers.call(vm))\n    }\n}","\nimport { compileToFunction } from \"./compiler\"\nimport { initState } from \"./state\"\nimport { callHook, mountComponent } from \"./lifecycle\"\nimport { mergeOptions } from \"./utils\"\n\nexport function initMixin(Vue) { // 给Vue增加init方法\n    Vue.prototype._init = function (options) { // 初始化操作\n        const vm = this\n        vm.$options = mergeOptions(this.constructor.options, options) // 将用户的选项挂载到实例上\n\n        callHook(vm, 'beforeCreate')\n        // 初始化状态,初始化计算属性\n        initState(vm)\n\n        callHook(vm, 'created')\n\n        if (options.el) {\n            // 实现数据的挂载\n            vm.$mount(options.el)\n        }\n    }\n\n    Vue.prototype.$mount = function (el) {\n        const vm = this\n        el = document.querySelector(el)\n        let ops = vm.$options\n        if (!ops.render) { // 先进行查找有没有render函数\n            let template // 没有render看一下是否写了template，没写template，采用外部的templat\n            if (!ops.template && el) { //没有写模板，但是写了el\n                template = el.outerHTML\n            } else {\n                // 写了template，就用写了的template\n                if(el) {\n                    template = ops.template\n                }\n            }\n            // 需要对模板进行编译\n            if(template) {\n                const render = compileToFunction(template)\n                ops.render = render\n            }\n        }\n        mountComponent(vm, el) // 组件的挂载\n        // 最终可以获取render方法\n    }\n}\n","\nimport { compileToFunction } from \"./compiler\"\nimport { initGloablAPI } from \"./gloablAPI\"\nimport { initMixin } from \"./init\"\nimport { initLifeCycle } from \"./lifecycle\"\nimport { initStateMixin } from \"./state\"\nimport { createElm, patch } from \"./vdom/patch\"\n\n// 将所有的方法都耦合在一起\nfunction Vue(options) {  // options用户的选项\n    this._init(options)\n}\n\ninitMixin(Vue) // 扩展init方法\n\ninitLifeCycle(Vue) // vm_update vm._render\n\ninitGloablAPI(Vue) // 全局API实现\n\ninitStateMixin(Vue) // nextTick 和 $watch\n\n// 测试：为了方便观察前后的虚拟节点变化\nlet render1 = compileToFunction(`<li key=\"a\" style=\"color:red\">{{name}}</li>`)\nlet vm1 = new Vue({data: {name: 'zhu'}})\nlet preVnode = render1.call(vm1)\n\nlet el = createElm(preVnode)\ndocument.body.appendChild(el)\n\nlet render2 = compileToFunction(`<li key=\"b\" style=\"color:red;background:blue\">{{name}}</li>`)\nlet vm2 =new Vue({data: {name: 'zf'}})\nlet nextVnode = render2.call(vm2)\n\nsetTimeout(() => {\n    patch(preVnode, nextVnode)\n}, 1000)\nexport default Vue"],"names":["attribute","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","defaultTagRE","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","forEach","item","key","JSON","stringify","slice","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","mergeOptions","strats","LIFECYCLE","hook","p","c","concat","options","mergeField","hasOwnProperty","initGloablAPI","Vue","mixin","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","method","args","result","call","inserted","ob","__ob__","observeArray","dep","notify","id","Dep","subs","target","addDep","watcher","update","pushTarget","popTarget","Observer","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","observe","dependArray","current","depend","childObj","get","set","newValue","Watcher","vm","exprOrFn","cb","getter","renderWatcher","deps","depsId","Set","lazy","dirty","user","undefined","has","add","addSub","queueWatcher","oldValue","queue","pending","flushSchedulerQueue","flushQueue","q","run","nextTick","callbacks","waiting","flushCallbacks","cbs","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","initState","opts","$options","initData","computed","initComputed","watch","initWatch","proxy","_data","watchers","_computedWatchers","userDef","fn","defineComputed","handler","createWatcher","$watch","setter","createComputedGetter","evaluate","initStateMixin","$nextTick","createElementVNode","vnode","createTextVNode","isSameVnode","vnode1","vnode2","createElm","el","createElement","patchProps","appendChild","props","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","replaceChild","console","log","initLifeCycle","_update","$el","_c","arguments","_v","_s","_render","mountComponent","updateComponent","callHook","handlers","initMixin","_init","constructor","$mount","querySelector","ops","outerHTML","render1","vm1","preVnode","body","render2","vm2","nextVnode"],"mappings":"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"}